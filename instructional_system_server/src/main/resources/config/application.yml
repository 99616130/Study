server:
  #端口
  port: 8081

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/instructional_system?serverTimezone=GMT%2B8
    username: root
    password: 888888
    hikari:
      #连接池名
      pool-name: DateHikariCP
      #最小空间连接数
      minimum-idle: 5
      #空闲连接存活最大时间，默认600000
      idle-timeout: 100000
      #最大连接数，默认10
      maximum-pool-size: 10
      #从连接池返回的连接的自动提交
      auto-commit: true
      #连接最大存活时间,0表示永久存活，默认1000000 30分钟
      max-lifetime: 1000000
      #连接超时时间，默认30000   30秒
      connection-timeout: 30000
      #测试连接是否可用的查询语句
      connection-test-query: SELECT 1

#    type: com.alibaba.druid.pool.DruidDataSource
#    #    2.0之后新特性 不加就不会自动建表
#    initialization-mode: always
#    druid:
#      initialSize: 5
#      minIdle: 5
#      maxActive: 20
#      # 配置获取连接等待超时的时间
#      maxWait: 60000
#      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
#      timeBetweenEvictionRunsMillis: 60000
#      # 配置一个连接在池中最小生存的时间，单位是毫秒
#      minEvictableIdleTimeMillis: 300000
#      validationQuery: SELECT 1 FROM DUAL
#      testWhileIdle: true
#      testOnBorrow: false
#      testOnReturn: false
#      # 打开PSCache，并且指定每个连接上PSCache的大小
#      poolPreparedStatements: true
#      maxPoolPreparedStatementPerConnectionSize: 20
#      # 配置监控统计拦截的 Filter，去掉后监控界面 SQL 无法统计，wall 用于防火墙（如果导入log4j的话需要在pom文件中导入相关的依赖）
#      filters: stat,wall,log4j2
#      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
#      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
#      # 合并多个DruidDataSource的监控数据
#      useGlobalDataSourceStat: true
#    druid:
#      initial-size: 5  #初始化连接数
#      max-active: 20 #最大连接数
#      min-idle: 5 #最小连接数
#      max-wait: 6000 #最大等待时间
#      connect-properties: config.decrypt=true;config.decrypt.key=${spring.datasource.druid.config.key}
#      #开启监控页面
#      stat-view-servlet:
#        enabled: true
#        login-username: admin
#        login-password: 123456
#      #开启Web监控
#      web-stat:
#        enabled: true
#      #开启AOP监控
#      aop-stat:
#        enabled: true
#      #开启WallFilter
#      wall:
#        enabled: true
#        throw-exception: true
#      log4j2:
#        enabled: true

#longging设置
#logging:
#  config: classpath:config/log4j2.yml

#Mybaris-plus配置
mybatis-plus:
  #配置Mapper映射文件
  mapper-locations: classpath*:/mapper/*Mapper.xml
  #配置Mybatis数据返回类型别名（默认别名是类名）
  type-aliases-package: com.peng.server.pojo
  configuration:
    #自动驼峰命名(false关闭)
    map-underscore-to-camel-case: false

#Mybatis SQL 打印（方法接口所在的包，不是Mapper.xml所在的包）
logging:
  level:
    com.peng.server.mapper: debug


jwt:
  #JWT存储的请求头
  tokenHeader: Authorization
  #JWT 加解密使用的秘钥
  secret: instructional_system-secret
  #JWT的超期限时间 （60*60*24）
  expiration: 604800
  # JWT 负载中拿到开头
  tokenHead: Bearer
